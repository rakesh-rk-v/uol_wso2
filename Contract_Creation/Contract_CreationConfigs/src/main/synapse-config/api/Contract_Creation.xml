<?xml version="1.0" encoding="UTF-8"?>
<api context="/create-contract" name="Contract_Creation" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST GET">
        <inSequence>
            <validate cache-schema="true" source="json-eval($)">
                <schema key="conf:bscsValidation/BSCS_Validations.json"/>
                <on-fail>
                    <log description="Validation Log"/>
                    <payloadFactory description="Invalid Input Response" media-type="json">
                        <format>{&#xd;
"ERROR" : "INVALID INPUTS",&#xd;
"Message" : "Please Give the Customer_ID, or NIC ,or passport"&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <respond description="Responds for Fault Input"/>
                </on-fail>
            </validate>
            <propertyGroup description="Getting Properties From Request Payload">
                <property expression="json-eval($.parameters.cust_id)" name="cust_id" scope="default" type="STRING"/>
                <property expression="json-eval($.parameters.NIC)" name="NIC" scope="default" type="STRING"/>
                <property expression="json-eval($.parameters.passport)" name="passport" scope="default" type="STRING"/>
                <property expression="json-eval($.rpcode)" name="rpcode" scope="default" type="STRING"/>
                <property expression="json-eval($.sccode)" name="sccode" scope="default" type="STRING"/>
                <property expression="json-eval($.plcode)" name="plcode" scope="default" type="STRING"/>
                <property expression="json-eval($.submId)" name="submId" scope="default" type="STRING"/>
            </propertyGroup>
            <script description="SETTING THE QUERY NAME" language="js"><![CDATA[// Example logic to construct SQL query based on available values
        var cust_id = mc.getProperty('cust_id');
        var NIC = mc.getProperty('NIC');
        var passport = mc.getProperty('passport');

        var sqlQuery = "";

        if (cust_id) {
            sqlQuery = "cust_id";
        } else if (NIC) {
            sqlQuery = "NIC";
        } else if (passport) {
            sqlQuery = "passport";
        }

        mc.setProperty('queryName', sqlQuery);]]></script>
            <log description="queryName">
                <property expression="$ctx:queryName" name="queryName"/>
            </log>
            <payloadFactory media-type="json">
                <format>{&#xd;
"queryName" : "$1",&#xd;
$2&#xd;
}</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:queryName"/>
                    <arg evaluator="json" expression="$.parameters"/>
                </args>
            </payloadFactory>
            <log level="custom">
                <property expression="$body" name="Payload Before Dynamic Mediator"/>
            </log>
            <class description="Dynamic Query Mediator" name="com.knot.uol.mediators.DynamicXMLQueryMediator"/>
            <filter regex="false" source="boolean(get-property('co_id'))">
                <then>
                    <log description="When The Customer is Un Available">
                        <property name="CO_ID" value="UN AVAILABLE"/>
                        <property expression="$ctx:cust_id" name="cust_id"/>
                    </log>
                    <payloadFactory description="NO Customer Response." media-type="xml">
                        <format>
                            <ERROR xmlns="">
                                <CUST_ID>{ctx:cust_id}</CUST_ID>
                                <MESSAGE>The Given Customer_ID is un Available</MESSAGE>
                            </ERROR>
                        </format>
                        <args/>
                    </payloadFactory>
                    <respond description="Responds When there is No Customer."/>
                </then>
                <else>
                    <log description="Customer Is Valid">
                        <property expression="$ctx:co_id" name="CO_ID"/>
                    </log>
                </else>
            </filter>
            <payloadFactory description="Payload For Contract Creation" media-type="xml">
                <format>
                    <soapenv:Envelope xmlns:con="http://ericsson.com/services/ws_CMI_7/contractnew" xmlns:ses="http://ericsson.com/services/ws_CMI_7/sessionchange" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                        <soapenv:Header>
                            <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                                <wsse:UsernameToken wsu:Id="UsernameToken-05E5B20EFB7524EEE216852580645311">
                                    <wsse:Username>ADMX</wsse:Username>
                                    <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">ADMX</wsse:Password>
                                </wsse:UsernameToken>
                            </wsse:Security>
                        </soapenv:Header>
                        <soapenv:Body>
                            <con:contractNewRequest>
                                <!--You may enter the following 2 items in any order-->
                                <!--Optional:-->
                                <con:inputAttributes>
                                    <con:csId>$1</con:csId>
                                    <con:sccode>$2</con:sccode>
                                    <con:submId>$3</con:submId>
                                    <con:plcode>$4</con:plcode>
                                    <con:rpcode>$5</con:rpcode>
                                </con:inputAttributes>
                                <con:sessionChangeRequest>
                                    <ses:values>
                                        <ses:item>
                                            <ses:key>BU_ID</ses:key>
                                            <ses:value>2</ses:value>
                                        </ses:item>
                                    </ses:values>
                                </con:sessionChangeRequest>
                            </con:contractNewRequest>
                        </soapenv:Body>
                    </soapenv:Envelope>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:cust_id"/>
                    <arg evaluator="xml" expression="$ctx:sccode"/>
                    <arg evaluator="xml" expression="$ctx:submId"/>
                    <arg evaluator="xml" expression="$ctx:plcode"/>
                    <arg evaluator="xml" expression="$ctx:rpcode"/>
                </args>
            </payloadFactory>
            <call>
                <endpoint key="BSCS_KNOT"/>
            </call>
            <dblookup>
                <connection>
                    <pool>
                        <driver>com.mysql.cj.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/wso2</url>
                        <user>root</user>
                        <password>mysql</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[insert into bscs.REQUEST (?,?,?,?,?)]]></sql>
                </statement>
            </dblookup>
            <respond description="Responds after Calling End Point."/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
